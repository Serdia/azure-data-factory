{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "oserdyukADFTutorialDataFactory"
		},
		"ADLS2toStormorgandataplatform_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS2toStormorgandataplatform'"
		},
		"DLSGen2_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DLSGen2_LS'"
		},
		"LS_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLDB'"
		},
		"AzureStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageLinkedService'"
		},
		"SqlServerLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerLinkedService'",
			"defaultValue": "Integrated Security=True;Data Source=10.26.26.14;Initial Catalog=mejames"
		},
		"SqlServerLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerLinkedService'"
		},
		"isExcelOnPremise_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'isExcelOnPremise'"
		},
		"ADLS2toStormorgandataplatform_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stormorgandataplatform.dfs.core.windows.net/"
		},
		"DLSGen2_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakev2storacct.dfs.core.windows.net/"
		},
		"KeyVault_LS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvVehicleSystem.vault.azure.net/"
		},
		"osAzureKeyVault_LS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://osAzureKeyvault.vault.azure.net/"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0713-054208-n19vt55v"
		},
		"S3_LS_properties_typeProperties_accessKeyId": {
			"type": "object",
			"defaultValue": {
				"type": "AzureKeyVaultSecret",
				"store": {
					"referenceName": "KeyVault_LS",
					"type": "LinkedServiceReference"
				},
				"secretName": "s3AccessKeyID"
			}
		},
		"SqlServerLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aligngeneral\\oserdyuk"
		},
		"isExcelOnPremise_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\fs01\\Align\\Public\\temp\\TPAClaims"
		},
		"isExcelOnPremise_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "aligngeneral\\oserdyuk"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS2toStormorgandataplatform')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to stormorgandataplatform storage account",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS2toStormorgandataplatform_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS2toStormorgandataplatform_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DLSGen2_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to data lake storage Gen2",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DLSGen2_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DLSGen2_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Azure Key Vault",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_LS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to azure sql database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/osAzureKeyVault_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "linked service to osAzureKeyvault",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('osAzureKeyVault_LS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "version 5.25.8403.1",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TutorialIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_DL_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"landingFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().landingFolder",
							"type": "Expression"
						},
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DLSA_V2_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MyTestFile.xlsx",
						"folderPath": "inputfolder/AnotherTPA 7.31.2023",
						"fileSystem": "claimstpa"
					},
					"sheetIndex": 0,
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "inputfolder",
						"fileSystem": "claimstpa"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Field",
						"type": "String"
					},
					{
						"name": "Coverholder Name",
						"type": "String"
					},
					{
						"name": "TPA Name",
						"type": "String"
					},
					{
						"name": "Agreement No",
						"type": "String"
					},
					{
						"name": "Unique Market Reference (UMR) / Policy Number",
						"type": "String"
					},
					{
						"name": "Binder Contract Inception",
						"type": "String"
					},
					{
						"name": "Binder Contract Expiry",
						"type": "String"
					},
					{
						"name": "Reporting Period (End Date)",
						"type": "String"
					},
					{
						"name": "Class of Business: Section No, Risk code or description",
						"type": "String"
					},
					{
						"name": "Class of Business",
						"type": "String"
					},
					{
						"name": "Lloyd's Risk Code",
						"type": "String"
					},
					{
						"name": "Section No",
						"type": "String"
					},
					{
						"name": "Original Currency",
						"type": "String"
					},
					{
						"name": "Settlement Currency",
						"type": "String"
					},
					{
						"name": "Rate of Exchange",
						"type": "String"
					},
					{
						"name": "Certificate Reference",
						"type": "String"
					},
					{
						"name": "Claim Reference / Number",
						"type": "String"
					},
					{
						"name": "Insured Full Name or Company Name",
						"type": "String"
					},
					{
						"name": "Insured State, Province, Territory, Canton etc.",
						"type": "String"
					},
					{
						"name": "Insured Country",
						"type": "String"
					},
					{
						"name": "Location of risk State, Province, Territory, Canton",
						"type": "String"
					},
					{
						"name": "Location of risk Country",
						"type": "String"
					},
					{
						"name": "Risk Inception Date",
						"type": "String"
					},
					{
						"name": "Risk Expiry Date",
						"type": "String"
					},
					{
						"name": "Period of Cover - Narrative",
						"type": "String"
					},
					{
						"name": "Location of loss State, Province, Territory, Canton ",
						"type": "String"
					},
					{
						"name": "Location of loss Country",
						"type": "String"
					},
					{
						"name": "Cause of Loss Code",
						"type": "String"
					},
					{
						"name": "Loss Description",
						"type": "String"
					},
					{
						"name": "Date of Loss (From)",
						"type": "String"
					},
					{
						"name": "Date of Loss to",
						"type": "String"
					},
					{
						"name": "Date Claim First Advised/Date Claim Made",
						"type": "String"
					},
					{
						"name": "Claim Status",
						"type": "String"
					},
					{
						"name": "Refer to Underwriters",
						"type": "String"
					},
					{
						"name": "Denial",
						"type": "String"
					},
					{
						"name": "Claimant Name",
						"type": "String"
					},
					{
						"name": "Loss County",
						"type": "String"
					},
					{
						"name": "State of Filing",
						"type": "String"
					},
					{
						"name": "PCS Code",
						"type": "String"
					},
					{
						"name": "Medicare United States Bodily Injury",
						"type": "String"
					},
					{
						"name": "Medicare Eligibility Check Performance",
						"type": "String"
					},
					{
						"name": "Medicare Outcome of Eligibility Status Check",
						"type": "String"
					},
					{
						"name": "Medicare Conditional Payments",
						"type": "String"
					},
					{
						"name": "Medicare MSP Compliance Services",
						"type": "String"
					},
					{
						"name": "Paid this month - Indemnity",
						"type": "String"
					},
					{
						"name": "Paid this month - Fees",
						"type": "String"
					},
					{
						"name": "Previously Paid - Indemnity",
						"type": "String"
					},
					{
						"name": "Previously Paid - Fees",
						"type": "String"
					},
					{
						"name": "Reserve - Indemnity",
						"type": "String"
					},
					{
						"name": "Reserve - Fees",
						"type": "String"
					},
					{
						"name": "Change this month - Indemnity",
						"type": "String"
					},
					{
						"name": "Change this month - Fees",
						"type": "String"
					},
					{
						"name": "Total Incurred - Indemnity",
						"type": "String"
					},
					{
						"name": "Total Incurred - Fees",
						"type": "String"
					},
					{
						"name": "Coverholder PIN",
						"type": "String"
					},
					{
						"name": "Reporting Period Start Date",
						"type": "String"
					},
					{
						"name": "Type of Insurance (Direct, or Type of RI)",
						"type": "String"
					},
					{
						"name": "Policy or Group Ref",
						"type": "String"
					},
					{
						"name": "Insured Address ",
						"type": "String"
					},
					{
						"name": "Insured Postcode / Zip Code or similar",
						"type": "String"
					},
					{
						"name": "Location of Risk Location ID",
						"type": "String"
					},
					{
						"name": "Location of Risk Address",
						"type": "String"
					},
					{
						"name": "Location of Risk Postcode / Zip Code or similar",
						"type": "String"
					},
					{
						"name": "Deductible Amount",
						"type": "String"
					},
					{
						"name": "Deductible Basis",
						"type": "String"
					},
					{
						"name": "Sums Insured Amount",
						"type": "String"
					},
					{
						"name": "Location of loss Address",
						"type": "String"
					},
					{
						"name": "Location of loss Postcode / Zip Code or similar",
						"type": "String"
					},
					{
						"name": "Date Closed",
						"type": "String"
					},
					{
						"name": "Lloyd's Cat Code",
						"type": "String"
					},
					{
						"name": "Catastrophe Name",
						"type": "String"
					},
					{
						"name": "Paid this month - Expenses",
						"type": "String"
					},
					{
						"name": "Paid this month - Attorney Coverage Fees",
						"type": "String"
					},
					{
						"name": "Paid this month - Adjusters Fees",
						"type": "String"
					},
					{
						"name": "Paid this month - Defence Fees",
						"type": "String"
					},
					{
						"name": "Paid this month - TPA Fees",
						"type": "String"
					},
					{
						"name": "Previously Paid - Expenses",
						"type": "String"
					},
					{
						"name": "Previously Paid - Attorney Coverage Fees",
						"type": "String"
					},
					{
						"name": "Previously Paid - Adjusters Fees",
						"type": "String"
					},
					{
						"name": "Previously Paid - Defence Fees",
						"type": "String"
					},
					{
						"name": "Previously Paid - TPA Fees",
						"type": "String"
					},
					{
						"name": "Reserve - Expenses",
						"type": "String"
					},
					{
						"name": "Reserve - Attorney Coverage Fees",
						"type": "String"
					},
					{
						"name": "Reserve - Adjusters Fees",
						"type": "String"
					},
					{
						"name": "Reserve - Defence Fees",
						"type": "String"
					},
					{
						"name": "Reserve - TPA Fees",
						"type": "String"
					},
					{
						"name": "Total Incurred",
						"type": "String"
					},
					{
						"name": "Name or Reg No of Aircraft Vehicle, Vessel etc. ",
						"type": "String"
					},
					{
						"name": "% Ceded (Reinsurance)",
						"type": "String"
					},
					{
						"name": "Plan",
						"type": "String"
					},
					{
						"name": "Patient Name",
						"type": "String"
					},
					{
						"name": "Treatment Type",
						"type": "String"
					},
					{
						"name": "Country of Treatment",
						"type": "String"
					},
					{
						"name": "Date of Treatment",
						"type": "String"
					},
					{
						"name": "Expert - Role",
						"type": "String"
					},
					{
						"name": "Expert Firm / Company Name",
						"type": "String"
					},
					{
						"name": "Expert Reference No etc.",
						"type": "String"
					},
					{
						"name": "Expert Address",
						"type": "String"
					},
					{
						"name": "Expert State, Province, Territory, Canton etc.",
						"type": "String"
					},
					{
						"name": "Expert Postcode / Zip Code or similar",
						"type": "String"
					},
					{
						"name": "Expert Country",
						"type": "String"
					},
					{
						"name": "Notes",
						"type": "String"
					},
					{
						"name": "Date Claim Opened",
						"type": "String"
					},
					{
						"name": "Ex gratia payment",
						"type": "String"
					},
					{
						"name": "Claim First Notification Acknowledgement Date",
						"type": "String"
					},
					{
						"name": "Date First Reserve Established",
						"type": "String"
					},
					{
						"name": "Diary date",
						"type": "String"
					},
					{
						"name": "Peer review date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DB_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "VehicleID",
						"type": "nvarchar"
					},
					{
						"name": "latitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "longtitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "temperature",
						"type": "int",
						"precision": 10
					},
					{
						"name": "speed",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VehicleData1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Valid_json_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging",
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventsinktrigger_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "eventsink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventsourcetrigger')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "eventsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "linked service to create databricks account",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2147164793109402.2.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "osAzureKeyVault_LS",
							"type": "LinkedServiceReference"
						},
						"secretName": "databrickstoken"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/osAzureKeyVault_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection string to blob storage",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageLinkedService_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S3_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to S3 bucket AWS",
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('S3_LS_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault_LS",
							"type": "LinkedServiceReference"
						},
						"secretName": "s3SekretKey"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "test to offload pdf file from sql to blob",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerLinkedService_connectionString')]",
					"userName": "[parameters('SqlServerLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerLinkedService_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/isExcelOnPremise')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this linked server is a connection to my local machine",
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('isExcelOnPremise_properties_typeProperties_host')]",
					"userId": "[parameters('isExcelOnPremise_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('isExcelOnPremise_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS to SQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "move data from ADLS2 to sql DB",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "staging",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Valid_json_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_DB_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Valid_json_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DB_DS')]"
			]
		}
	]
}