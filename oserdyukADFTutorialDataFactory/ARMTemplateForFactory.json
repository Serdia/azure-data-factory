{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "oserdyukADFTutorialDataFactory"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageLinkedService'"
		},
		"DLSGen2_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DLSGen2_LS'"
		},
		"LS_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLDB'"
		},
		"SqlServerLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerLinkedService'",
			"defaultValue": "Integrated Security=True;Data Source=10.26.26.14;Initial Catalog=mejames"
		},
		"SqlServerLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerLinkedService'"
		},
		"isExcelOnPremise_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'isExcelOnPremise'"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0614-060655-iv90goau"
		},
		"DLSGen2_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakev2storacct.dfs.core.windows.net/"
		},
		"KeyVault_LS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvVehicleSystem.vault.azure.net/"
		},
		"S3_LS_properties_typeProperties_accessKeyId": {
			"type": "object",
			"defaultValue": {
				"type": "AzureKeyVaultSecret",
				"store": {
					"referenceName": "KeyVault_LS",
					"type": "LinkedServiceReference"
				},
				"secretName": "s3AccessKeyID"
			}
		},
		"SqlServerLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aligngeneral\\oserdyuk"
		},
		"isExcelOnPremise_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\oserdyuk\\Downloads"
		},
		"isExcelOnPremise_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "aligngeneral\\oserdyuk"
		},
		"Storage_Trigger_For_Json_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/204031b5-0de4-401e-83b5-7a551ee0c4b2/resourceGroups/rg_VehicleSystem/providers/Microsoft.Storage/storageAccounts/datalakev2storacct"
		},
		"event_trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/204031b5-0de4-401e-83b5-7a551ee0c4b2/resourceGroups/rg_VehicleSystem/providers/Microsoft.Storage/storageAccounts/datalakev2storacct"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS to SQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "move data from ADLS2 to sql DB",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "staging",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Valid_json_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_DB_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Valid_json_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DB_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NBIS_LoadMTDPremium')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load data from excel to sql",
				"activities": [
					{
						"name": "GetMetadata_readFileNames",
						"description": "read excel file names stored in blob container",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MTDPremium",
								"type": "DatasetReference",
								"parameters": {
									"cellRange": "A6:F10",
									"firstRowAsHeader": true
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetMetadata_readFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadata_readFileNames').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup_grabDate",
									"description": "grab date from cell A3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											}
										},
										"dataset": {
											"referenceName": "MTDPremium",
											"type": "DatasetReference",
											"parameters": {
												"cellRange": "A3:A3",
												"firstRowAsHeader": false
											}
										}
									}
								},
								{
									"name": "fromExcelToSql",
									"description": "copy data from excel file located in blob to sql database",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "update sql table",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "loadDate",
													"value": {
														"value": "@convertTimeZone(utcnow(),'UTC','Pacific Standard Time')",
														"type": "Expression"
													}
												},
												{
													"name": "premiumDate",
													"value": {
														"value": "@activity('Lookup_grabDate').output.firstRow.Prop_0",
														"type": "Expression"
													}
												},
												{
													"name": "IsCurrent",
													"value": {
														"value": "1",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MTDPremium",
											"type": "DatasetReference",
											"parameters": {
												"cellRange": "A6:F10",
												"firstRowAsHeader": true
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nbismtd",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "tblNBIS_MTDPremium"
											}
										}
									]
								},
								{
									"name": "update sql table",
									"description": "set IsCurrent to 0",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Lookup_grabDate",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "update tblNBIS_MTDPremium\nset IsCurrent = 0\nselect 1 as DummyValue",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "nbismtd",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "tblNBIS_MTDPremium"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MTDPremium')]",
				"[concat(variables('factoryId'), '/datasets/nbismtd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLServerToBlobPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySqlServerToAzureBlobActivity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select top 10 Document from [dbo].[tblDocumentStore] where year(DateAdded) = 2021",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureBlobDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-06-10T01:51:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerDataset')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deleteOldFiles2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText3",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "\n@less(activity('Get Metadata2').output.lastModified,\nformatDateTime(adddays(utcNow(), -20), 'yyyy-MM-ddThh:mm:ssZ'))\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "Binary1",
														"type": "DatasetReference",
														"parameters": {
															"delfile": {
																"value": "@activity('Get Metadata2').output.itemName",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/event_trigger_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copyeventrigger",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "eventsourcetrigger",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "eventsinktrigger_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/eventsourcetrigger')]",
				"[concat(variables('factoryId'), '/datasets/eventsinktrigger_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fromPremToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fromOnPremToBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsExcelOnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsTestOnPremXL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-15T05:47:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExcelOnPrem')]",
				"[concat(variables('factoryId'), '/datasets/dsTestOnPremXL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestFromS3toADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy data from S3 to data lake storage Gen2",
				"activities": [
					{
						"name": "Copy data1",
						"description": "copy date from S3 bucket to ADLS2 landing folder:  input / landing / YYYY / MM / DD",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@concat(\r\n    formatDateTime(utcnow(), 'yyyy'), \r\n    '/', \r\n    formatDateTime(utcnow(), 'MM'), \r\n    '/', \r\n    formatDateTime(utcnow(), 'dd'), \r\n    '/' )",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_DL_DS",
								"type": "DatasetReference",
								"parameters": {
									"landingFolder": {
										"value": "@concat(\n    'landing/',\n    formatDateTime(utcnow(), 'yyyy'), \n    '/', \n    formatDateTime(utcnow(), 'MM'), \n    '/', \n    formatDateTime(utcnow(), 'dd'), \n    '/' )",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/Azure_DL_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/oserdyuk@aligngeneral.com/12-Production-Workloads-with-Azure-Data-Factory/Record-Run",
							"baseParameters": {
								"ranBy": "ADF"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-06-14T20:52:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@CONCAT(pipeline().RunId, '.txt')",
							"type": "Expression"
						},
						"folderPath": "fromonprem",
						"container": "adftutorial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_DL_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"landingFolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().landingFolder",
							"type": "Expression"
						},
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"delfile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().delfile",
							"type": "Expression"
						},
						"container": "deletefiles"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "input",
						"container": "deletefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "policy_number",
						"type": "String"
					},
					{
						"name": "policy_effective_date",
						"type": "String"
					},
					{
						"name": "policy_expiration_date",
						"type": "String"
					},
					{
						"name": "transaction_type",
						"type": "String"
					},
					{
						"name": "transaction_effective_date",
						"type": "String"
					},
					{
						"name": "primary_insured_name",
						"type": "String"
					},
					{
						"name": "dba_name",
						"type": "String"
					},
					{
						"name": "primary_insured_street_address_1",
						"type": "String"
					},
					{
						"name": "primary_insured_street_address_2",
						"type": "String"
					},
					{
						"name": "primary_insured_city",
						"type": "String"
					},
					{
						"name": "primary_insured_state",
						"type": "String"
					},
					{
						"name": "primary_insured_zip_code",
						"type": "String"
					},
					{
						"name": "primary_insured_country",
						"type": "String"
					},
					{
						"name": "source_system_module",
						"type": "String"
					},
					{
						"name": "sic_code",
						"type": "String"
					},
					{
						"name": "domicile_city",
						"type": "String"
					},
					{
						"name": "domicile_state",
						"type": "String"
					},
					{
						"name": "domicile_country",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "customer_number",
						"type": "String"
					},
					{
						"name": "qual_exempt_comm_pol_holder",
						"type": "String"
					},
					{
						"name": "ny_free_trade_zone",
						"type": "String"
					},
					{
						"name": "underwriter_name",
						"type": "String"
					},
					{
						"name": "master_company",
						"type": "String"
					},
					{
						"name": "billing_type",
						"type": "String"
					},
					{
						"name": "payment_plan",
						"type": "String"
					},
					{
						"name": "endorsement_billing_method",
						"type": "String"
					},
					{
						"name": "producer_code",
						"type": "String"
					},
					{
						"name": "premium_financed_policy",
						"type": "String"
					},
					{
						"name": "policy_symbol",
						"type": "String"
					},
					{
						"name": "terrorism_type",
						"type": "String"
					},
					{
						"name": "terrorism_change_amount",
						"type": "String"
					},
					{
						"name": "coverage_trigger",
						"type": "String"
					},
					{
						"name": "claims_made",
						"type": "String"
					},
					{
						"name": "original_entry_into_claims_made",
						"type": "String"
					},
					{
						"name": "retroactive_date",
						"type": "String"
					},
					{
						"name": "pollution_coverage_occurrence_limit",
						"type": "String"
					},
					{
						"name": "deductible_form",
						"type": "String"
					},
					{
						"name": "pollution_coverage_deductible_amount",
						"type": "String"
					},
					{
						"name": "premium_change_amount",
						"type": "String"
					},
					{
						"name": "policy_aggregate_limit",
						"type": "String"
					},
					{
						"name": "commission_rate",
						"type": "String"
					},
					{
						"name": "professional_coverage_occurrence_limit",
						"type": "String"
					},
					{
						"name": "professional_coverage_deductible_amount",
						"type": "String"
					},
					{
						"name": "cancellation_reason",
						"type": "String"
					},
					{
						"name": "cancellation_reason_other_description",
						"type": "String"
					},
					{
						"name": "nonrenewal_reason",
						"type": "String"
					},
					{
						"name": "nonrenewal_reason_other_description",
						"type": "String"
					},
					{
						"name": "tax_surcharge_type_1",
						"type": "String"
					},
					{
						"name": "tax_surcharge_type_2",
						"type": "String"
					},
					{
						"name": "tax_surcharge_change_amount_1",
						"type": "String"
					},
					{
						"name": "tax_surcharge_change_amount_2",
						"type": "String"
					},
					{
						"name": "tax_location_code",
						"type": "String"
					},
					{
						"name": "policy_mod",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "deletefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "deletefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "S3_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "bkt-iotdata",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"VehicleID": {
							"type": "string"
						},
						"latitiude": {
							"type": "number"
						},
						"longitude": {
							"type": "number"
						},
						"City": {
							"type": "string"
						},
						"temeprature": {
							"type": "integer"
						},
						"speed": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/S3_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MTDPremium')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cellRange": {
						"type": "string",
						"defaultValue": "A6:F10"
					},
					"firstRowAsHeader": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "MTD GWP",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "input",
						"container": "nbiscontainer"
					},
					"range": {
						"value": "@dataset().cellRange",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().firstRowAsHeader",
						"type": "Expression"
					}
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DB_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "VehicleID",
						"type": "nvarchar"
					},
					{
						"name": "latitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "longtitude",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "temperature",
						"type": "int",
						"precision": 10
					},
					{
						"name": "speed",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VehicleData1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DocumentStoreGUID",
						"type": "uniqueidentifier"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "FileAssociation",
						"type": "varchar"
					},
					{
						"name": "Document",
						"type": "image"
					},
					{
						"name": "DateAdded",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FileName",
						"type": "nvarchar"
					},
					{
						"name": "UserGUIDOriginator",
						"type": "uniqueidentifier"
					},
					{
						"name": "TypeGUID",
						"type": "uniqueidentifier"
					},
					{
						"name": "CompressionLevel",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Compressed",
						"type": "bit"
					},
					{
						"name": "OriginalFileSize",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocumentThumbnail",
						"type": "image"
					},
					{
						"name": "FolderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CopyAssociationsForwardOnRenewal",
						"type": "bit"
					},
					{
						"name": "MetaXML",
						"type": "text"
					},
					{
						"name": "ActualFileSize",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DocumentStoreId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastEditDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DocumentLocation",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CopyAssociationForwardOnlyOnce",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Align_ArchClaims"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Valid_json_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging",
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExcelOnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "isExcelOnPremise",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "Missing CauseLossCd.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Active Contact List\nAs of: 7/13/2022",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/isExcelOnPremise')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsTestOnPremXL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "excelonprem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventsinktrigger_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "eventsink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventsourcetrigger')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DLSGen2_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "eventsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DLSGen2_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nbismtd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "my test azure databricks",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4422633782521920.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection string to blob storage",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageLinkedService_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DLSGen2_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to data lake storage Gen2",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DLSGen2_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DLSGen2_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to Azure Key Vault",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_LS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to azure sql database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/S3_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to S3 bucket AWS",
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('S3_LS_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault_LS",
							"type": "LinkedServiceReference"
						},
						"secretName": "s3SekretKey"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "test to offload pdf file from sql to blob",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerLinkedService_connectionString')]",
					"userName": "[parameters('SqlServerLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerLinkedService_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/isExcelOnPremise')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this linked server is a connection to my local machine",
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('isExcelOnPremise_properties_typeProperties_host')]",
					"userId": "[parameters('isExcelOnPremise_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('isExcelOnPremise_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage_Trigger_For_Json')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "trigger will be initiated when file dropped to ADLS2 storage",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ADLS to SQLDB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/staging/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Storage_Trigger_For_Json_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADLS to SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/event_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "event_trigger_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventsource/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('event_trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/event_trigger_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "version 5.25.8403.1",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TutorialIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}